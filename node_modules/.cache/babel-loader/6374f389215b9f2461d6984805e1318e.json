{"ast":null,"code":"import _toConsumableArray from\"C:/Users/PC/Desktop/mobile waiter/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers}from\"redux\";var sendItem=function sendItem(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'send':return action.payload;default:return state;}};var orderBag=function orderBag(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'add':return[].concat(_toConsumableArray(state),[action.payload]);case'delete':state[action.payload]=\"removed\";alert(action.payload);return state.filter(function(x){return x!==\"removed\";});default:return state;}};export default combineReducers({sendItem:sendItem,orderBag:orderBag});","map":{"version":3,"sources":["C:/Users/PC/Desktop/mobile waiter/frontend/src/redux/reducer.js"],"names":["combineReducers","sendItem","state","action","type","payload","orderBag","alert","filter","x"],"mappings":"qIAAA,OAASA,eAAT,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACrC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,MAAL,CACI,MAAOD,CAAAA,MAAM,CAACE,OAAd,CACJ,QACI,MAAOH,CAAAA,KAAP,CAJR,CAMH,CAPD,CAQA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAwB,IAAvBJ,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACrC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,KAAL,CACI,mCAAWF,KAAX,GAAiBC,MAAM,CAACE,OAAxB,GACJ,IAAK,QAAL,CACIH,KAAK,CAACC,MAAM,CAACE,OAAR,CAAL,CAAwB,SAAxB,CACAE,KAAK,CAACJ,MAAM,CAACE,OAAR,CAAL,CACA,MAAOH,CAAAA,KAAK,CAACM,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAK,SAAV,EAAd,CAAP,CACJ,QACI,MAAOP,CAAAA,KAAP,CARR,CAUH,CAXD,CAYA,cAAeF,CAAAA,eAAe,CAAC,CAC3BC,QAAQ,CAAEA,QADiB,CAE3BK,QAAQ,CAAEA,QAFiB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst sendItem = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'send':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst orderBag = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state,action.payload]\r\n        case 'delete':\r\n            state[action.payload] = \"removed\"\r\n            alert(action.payload)\r\n            return state.filter(x => x !== \"removed\")\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default combineReducers({\r\n    sendItem: sendItem,\r\n    orderBag: orderBag\r\n});\r\n"]},"metadata":{},"sourceType":"module"}