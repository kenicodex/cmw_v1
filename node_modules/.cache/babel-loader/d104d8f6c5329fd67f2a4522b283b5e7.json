{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\mobile waiter\\\\frontend\\\\src\\\\Components\\\\Confirm\\\\Confirm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Navbar from '../Navbar/Navbar';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Confirm(props) {\n  _s();\n\n  // const [Total, setTotal] = useState(\"\")\n  const [Adds, setAdds] = useState([]); // let x  ;\n\n  const sendItem = useSelector(state => state.sendItem);\n  const orderBag = useSelector(state => state.orderBag);\n  useEffect(() => {\n    setAdds(sendItem.addons.filter(x => x.number !== 0));\n    alert(orderBag.length);\n  }, [sendItem.addons, orderBag]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h2 text-center w-100 my-3\",\n        children: \"Order List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), orderBag.map(({\n        Name,\n        Phone,\n        Room,\n        Hall,\n        Food,\n        Date,\n        Time,\n        Price\n      }, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border col-lg-4 p-3 mx-auto position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Buyer : \", Name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Phone : \", Phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Room : \", Room]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Hall : \", Hall]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Food : \", Food, \" \\u20A6\", Price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Date : \", Date || \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Time : \", Time || \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [\"Things on top : \", Adds !== undefined ? Adds.map(({\n              top,\n              price,\n              number,\n              newprice\n            }, i) => {\n              //  x  = x + parseInt(newprice);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: top\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 60\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [newprice, \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 79\n                }, this), \" \", Adds.length - 1 === i ? \".\" : \",\"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this);\n            }) : \"You didn't add anything on top\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border col-lg-4 p-3 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Buyer : \", sendItem.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Phone : \", sendItem.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Room : \", sendItem.Room]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Hall : \", sendItem.Hall]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Food : \", sendItem.Food, \" \\u20A6\", sendItem.Price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Date : \", sendItem.Date || \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Time : \", sendItem.Time || \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Things on top : \", Adds !== undefined ? Adds.map(({\n            top,\n            price,\n            number,\n            newprice\n          }, i) => {\n            //  x  = x + parseInt(newprice);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: top\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 56\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [newprice, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 75\n              }, this), \" \", Adds.length - 1 === i ? \".\" : \",\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this);\n          }) : \"You didn't add anything on top\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 my-2 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-success btn \",\n          children: \"Complete Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Confirm, \"QgiwNs+PLoiSKK3Pp7jTUE3FKZo=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Confirm;\nexport default Confirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/mobile waiter/frontend/src/Components/Confirm/Confirm.jsx"],"names":["React","useEffect","useState","useSelector","Navbar","Confirm","props","Adds","setAdds","sendItem","state","orderBag","addons","filter","x","number","alert","length","map","Name","Phone","Room","Hall","Food","Date","Time","Price","i","undefined","top","price","newprice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,aAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFoB,CAIpB;;AACA,QAAMO,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,QAAQ,CAACG,MAAT,CAAgBC,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,CAAzC,CAAD,CAAP;AACAC,IAAAA,KAAK,CAACL,QAAQ,CAACM,MAAV,CAAL;AAEH,GAJQ,EAIN,CAACR,QAAQ,CAACG,MAAV,EAAiBD,QAAjB,CAJM,CAAT;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,QAAQ,CAACO,GAAT,CAAa,CAAC;AAACC,QAAAA,IAAD;AAAMC,QAAAA,KAAN;AAAYC,QAAAA,IAAZ;AAAiBC,QAAAA,IAAjB;AAAsBC,QAAAA,IAAtB;AAA2BC,QAAAA,IAA3B;AAAgCC,QAAAA,IAAhC;AAAqCC,QAAAA;AAArC,OAAD,EAA6CC,CAA7C,KAAiD;AAC3D,4BACI;AAAa,UAAA,SAAS,EAAC,+CAAvB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADJ,eAIA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCAA2BR,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,kCAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eAOA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,kCAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA,eAQA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,kCAA0BC,IAA1B,aAAyCG,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBARA,eASA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,kCAA0BF,IAAI,IAAI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,eAUA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,kCAA0BC,IAAI,IAAI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,eAYA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,2CAAmClB,IAAI,KAAKqB,SAAT,GAAqBrB,IAAI,CAACW,GAAL,CAAS,CAAC;AAAEW,cAAAA,GAAF;AAAOC,cAAAA,KAAP;AAAcf,cAAAA,MAAd;AAAsBgB,cAAAA;AAAtB,aAAD,EAAmCJ,CAAnC,KAAyC;AACtG;AACA,kCACI,QAAC,KAAD,CAAO,QAAP;AAAA,wCACI;AAAA,4BAAOZ;AAAP;AAAA;AAAA;AAAA;AAAA,wBADJ,qBAC2B;AAAA,4BAAOc;AAAP;AAAA;AAAA;AAAA;AAAA,wBAD3B,oBAC8C;AAAA,6BAAOE,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD9C,OACyExB,IAAI,CAACU,MAAL,GAAc,CAAd,KAAoBU,CAApB,GAAwB,GAAxB,GAA8B,GADvG;AAAA,iBAAqBA,CAArB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aAPuD,CAArB,GAO9B,gCAPL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZA;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAwBH,OAzBA,CAFL,eA4BI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,iCAA2BlB,QAAQ,CAACU,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,iCAA2BV,QAAQ,CAACW,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0BX,QAAQ,CAACY,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0BZ,QAAQ,CAACa,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0Bb,QAAQ,CAACc,IAAnC,aAAkDd,QAAQ,CAACiB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0BjB,QAAQ,CAACe,IAAT,IAAiB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0Bf,QAAQ,CAACgB,IAAT,IAAiB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eASI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,yCAAmClB,IAAI,KAAKqB,SAAT,GAAqBrB,IAAI,CAACW,GAAL,CAAS,CAAC;AAAEW,YAAAA,GAAF;AAAOC,YAAAA,KAAP;AAAcf,YAAAA,MAAd;AAAsBgB,YAAAA;AAAtB,WAAD,EAAmCJ,CAAnC,KAAyC;AACtG;AACA,gCACI,QAAC,KAAD,CAAO,QAAP;AAAA,sCACI;AAAA,0BAAOZ;AAAP;AAAA;AAAA;AAAA;AAAA,sBADJ,qBAC2B;AAAA,0BAAOc;AAAP;AAAA;AAAA;AAAA;AAAA,sBAD3B,oBAC8C;AAAA,2BAAOE,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD9C,OACyExB,IAAI,CAACU,MAAL,GAAc,CAAd,KAAoBU,CAApB,GAAwB,GAAxB,GAA8B,GADvG;AAAA,eAAqBA,CAArB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAPuD,CAArB,GAO9B,gCAPL;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA+CI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwDH;;GApEQtB,O;UAKYF,W,EACAA,W;;;KANZE,O;AAsET,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport './style.css'\r\n\r\nfunction Confirm(props) {\r\n    // const [Total, setTotal] = useState(\"\")\r\n    const [Adds, setAdds] = useState([])\r\n\r\n    // let x  ;\r\n    const sendItem = useSelector(state => state.sendItem)\r\n    const orderBag = useSelector(state => state.orderBag)\r\n    useEffect(() => {\r\n        setAdds(sendItem.addons.filter(x => x.number !== 0))\r\n        alert(orderBag.length)\r\n\r\n    }, [sendItem.addons,orderBag])\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar />\r\n            <div className=\"container\">\r\n                <div className=\"h2 text-center w-100 my-3\">Order List</div>\r\n                {orderBag.map(({Name,Phone,Room,Hall,Food,Date,Time,Price},i)=>{\r\n                    return(\r\n                        <div key={i} className=\"border col-lg-4 p-3 mx-auto position-relative\">\r\n                            <div className=\"p-2\">\r\n\r\n                            </div>\r\n                        <div className=\"\">Buyer : {Name}</div>\r\n                        <div className=\"\">Phone : {Phone}</div>\r\n                        <div className=\"\">Room : {Room}</div>\r\n                        <div className=\"\">Hall : {Hall}</div>\r\n                        <div className=\"\">Food : {Food} &#x20A6;{Price}</div>\r\n                        <div className=\"\">Date : {Date || \"\"}</div>\r\n                        <div className=\"\">Time : {Time || \"\"}</div>\r\n    \r\n                        <div className=\"\">Things on top : {Adds !== undefined ? Adds.map(({ top, price, number, newprice }, i) => {\r\n                            //  x  = x + parseInt(newprice);\r\n                            return (\r\n                                <React.Fragment key={i}>\r\n                                    <span>{number}</span>  <span>{top}</span> <span>{newprice}  </span> {Adds.length - 1 === i ? \".\" : \",\"}\r\n                                </React.Fragment>\r\n                            )\r\n                        }) : \"You didn't add anything on top\"}</div>\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"border col-lg-4 p-3 mx-auto\">\r\n                    <div className=\"\">Buyer : {sendItem.Name}</div>\r\n                    <div className=\"\">Phone : {sendItem.Phone}</div>\r\n                    <div className=\"\">Room : {sendItem.Room}</div>\r\n                    <div className=\"\">Hall : {sendItem.Hall}</div>\r\n                    <div className=\"\">Food : {sendItem.Food} &#x20A6;{sendItem.Price}</div>\r\n                    <div className=\"\">Date : {sendItem.Date || \"\"}</div>\r\n                    <div className=\"\">Time : {sendItem.Time || \"\"}</div>\r\n\r\n                    <div className=\"\">Things on top : {Adds !== undefined ? Adds.map(({ top, price, number, newprice }, i) => {\r\n                        //  x  = x + parseInt(newprice);\r\n                        return (\r\n                            <React.Fragment key={i}>\r\n                                <span>{number}</span>  <span>{top}</span> <span>{newprice}  </span> {Adds.length - 1 === i ? \".\" : \",\"}\r\n                            </React.Fragment>\r\n                        )\r\n                    }) : \"You didn't add anything on top\"}</div>\r\n\r\n                </div>\r\n                <div className=\"w-100 my-2 text-center\">\r\n                    <button className=\"btn-success btn \">Complete Order</button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Confirm;"]},"metadata":{},"sourceType":"module"}